{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "2.2.330", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_AWS_24", "name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22", "shortDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"}, "fullDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"}, "help": {"text": "\"Ensure no security groups allow ingress from 0.0.0.0:0 to port 22\nResource: aws_security_group.allow_ssh_from_internet\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/networking_1-port-security"}, {"id": "CKV_AWS_23", "name": "Ensure every security groups rule has a description", "shortDescription": {"text": "Ensure every security groups rule has a description"}, "fullDescription": {"text": "Ensure every security groups rule has a description"}, "help": {"text": "\"Ensure every security groups rule has a description\nResource: aws_security_group.allow_ssh_from_internet\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/networking_31"}, {"id": "CKV_AWS_184", "name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)", "shortDescription": {"text": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"}, "fullDescription": {"text": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"}, "help": {"text": "\"Ensure resource is encrypted by KMS using a customer managed Key (CMK)\nResource: aws_efs_file_system.eh_efs\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/bc_aws_general_104"}, {"id": "CKV_AWS_42", "name": "Ensure EFS is securely encrypted", "shortDescription": {"text": "Ensure EFS is securely encrypted"}, "fullDescription": {"text": "Ensure EFS is securely encrypted"}, "help": {"text": "\"Ensure EFS is securely encrypted\nResource: aws_efs_file_system.eh_efs\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/general_17"}, {"id": "CKV_AWS_233", "name": "Ensure Create before destroy for ACM certificates", "shortDescription": {"text": "Ensure Create before destroy for ACM certificates"}, "fullDescription": {"text": "Ensure Create before destroy for ACM certificates"}, "help": {"text": "\"Ensure Create before destroy for ACM certificates\nResource: aws_acm_certificate.eh_certificate\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/ensure-aws-acm-certificate-enables-create-before-destroy"}, {"id": "CKV_AWS_260", "name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80", "shortDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "fullDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "help": {"text": "\"Ensure no security groups allow ingress from 0.0.0.0:0 to port 80\nResource: aws_security_group.allow_traffic_from_internet\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80"}, {"id": "CKV_AWS_25", "name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389", "shortDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"}, "fullDescription": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"}, "help": {"text": "\"Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389\nResource: aws_security_group.allow_traffic_from_internet\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/networking_2"}, {"id": "CKV2_AWS_5", "name": "Ensure that Security Groups are attached to another resource", "shortDescription": {"text": "Ensure that Security Groups are attached to another resource"}, "fullDescription": {"text": "Ensure that Security Groups are attached to another resource"}, "help": {"text": "\"Ensure that Security Groups are attached to another resource\nResource: aws_security_group.allow_traffic_from_internet\""}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_AWS_24", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "bastion.tf"}, "region": {"startLine": 22, "endLine": 42}}}]}, {"ruleId": "CKV_AWS_23", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure every security groups rule has a description"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "bastion.tf"}, "region": {"startLine": 22, "endLine": 42}}}]}, {"ruleId": "CKV_AWS_23", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure every security groups rule has a description"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "db.tf"}, "region": {"startLine": 5, "endLine": 25}}}]}, {"ruleId": "CKV_AWS_184", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "efs.tf"}, "region": {"startLine": 1, "endLine": 4}}}]}, {"ruleId": "CKV_AWS_42", "ruleIndex": 3, "level": "error", "attachments": [], "message": {"text": "Ensure EFS is securely encrypted"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "efs.tf"}, "region": {"startLine": 1, "endLine": 4}}}]}, {"ruleId": "CKV_AWS_233", "ruleIndex": 4, "level": "error", "attachments": [], "message": {"text": "Ensure Create before destroy for ACM certificates"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "ssl-certificates.tf"}, "region": {"startLine": 1, "endLine": 6}}}]}, {"ruleId": "CKV_AWS_260", "ruleIndex": 5, "level": "error", "attachments": [], "message": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "workergroup.tf"}, "region": {"startLine": 1, "endLine": 21}}}]}, {"ruleId": "CKV_AWS_24", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "workergroup.tf"}, "region": {"startLine": 1, "endLine": 21}}}]}, {"ruleId": "CKV_AWS_23", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Ensure every security groups rule has a description"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "workergroup.tf"}, "region": {"startLine": 1, "endLine": 21}}}]}, {"ruleId": "CKV_AWS_25", "ruleIndex": 6, "level": "error", "attachments": [], "message": {"text": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "workergroup.tf"}, "region": {"startLine": 1, "endLine": 21}}}]}, {"ruleId": "CKV2_AWS_5", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Ensure that Security Groups are attached to another resource"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "workergroup.tf"}, "region": {"startLine": 1, "endLine": 21}}}]}, {"ruleId": "CKV2_AWS_5", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Ensure that Security Groups are attached to another resource"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "bastion.tf"}, "region": {"startLine": 22, "endLine": 42}}}]}, {"ruleId": "CKV2_AWS_5", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Ensure that Security Groups are attached to another resource"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "db.tf"}, "region": {"startLine": 5, "endLine": 25}}}]}]}]}
